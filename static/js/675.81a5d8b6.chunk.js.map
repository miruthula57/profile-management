{"version":3,"file":"static/js/675.81a5d8b6.chunk.js","mappings":"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","sources":["components/Button/ButtonComponent.tsx","views/NoDataFound/NoDataFound.tsx","components/Dialog/DialogComponent.tsx","views/ProfileList/ProfileList.tsx"],"sourcesContent":["import { Button } from \"@mui/material\";\nimport { ICustomButtonProps } from \"../../core/interface/ICustomButtonProps\";\n\nconst ButtonComponent = (props: ICustomButtonProps) => {\n  const {\n    color,\n    variant = \"contained\",\n    label,\n    size = \"small\",\n    id,\n    children,\n    ...rest\n  } = props;\n\n  return (\n    <Button\n      variant={variant}\n      size={size}\n      color={color || \"inherit\"}\n      id={id + `_button`}\n      {...rest}\n    >\n      <span id={id + `_button_label`}>{label}</span>\n      {children}\n    </Button>\n  );\n};\n\nexport default ButtonComponent;\n","import NoDataFoundIcon from '../../../src/views/assets/nodata.png';\n\nconst NoDataFound = () => {\n    return (\n        <>\n            <img src={NoDataFoundIcon} alt=\"NoDataFoundIconImg\" width={250} />\n        </>\n    )\n}\n\nexport default NoDataFound","import CloseIcon from \"@mui/icons-material/Close\";\nimport { Dialog, DialogTitle, IconButton } from \"@mui/material\";\nimport { ICustomDialogueProps } from \"../../core/interface/ICustomDialogueProps\";\nconst DialogComponent = (props: ICustomDialogueProps) => {\n  const {\n    open,\n    scroll = \"body\",\n    id,\n    children,\n    modalTitle,\n    handleClose,\n    ...rest\n  } = props;\n  return (\n    <Dialog\n      onClose={handleClose}\n      id={id + `_dialog`}\n      aria-labelledby=\"customized-dialog-title\"\n      open={open}\n      scroll={scroll}\n      {...rest}\n    >\n      <DialogTitle sx={{ m: 0, p: 2 }} id={id + `_dialog_title`}>\n        {modalTitle}\n      </DialogTitle>\n      <IconButton\n        aria-label=\"close\"\n        onClick={handleClose}\n        sx={{\n          position: \"absolute\",\n          right: 8,\n          top: 8,\n          color: (theme) => theme.palette.grey[500],\n        }}\n        id={id + `_dialog_btn`}\n      >\n        <CloseIcon />\n      </IconButton>\n      {children}\n    </Dialog>\n  );\n};\n\nexport default DialogComponent;\n","import { Delete, Edit } from \"@mui/icons-material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography\n} from \"@mui/material\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ButtonComponent from \"../../components/Button/ButtonComponent\";\nimport DialogComponent from \"../../components/Dialog/DialogComponent\";\nimport { useProfiles } from \"../../context/ProfileContext\";\nimport NoDataFound from \"../NoDataFound/NoDataFound\";\n\nconst ProfileList = () => {\n  const navigate = useNavigate();\n  const { profiles, deleteProfileById } = useProfiles();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [selectedProfileId, setSelectedProfileId] = useState<string | null>(\n    null\n  );\n\n  const handleDeleteClick = (id: string) => {\n    setSelectedProfileId(id);\n    setOpenDialog(true);\n  };\n\n  const handleConfirmDelete = () => {\n    if (selectedProfileId) {\n      deleteProfileById(selectedProfileId);\n    }\n    setOpenDialog(false);\n  };\n\n  const handleCancelDelete = () => {\n    setOpenDialog(false);\n  };\n\n  const handleClick = () => {\n    navigate(\"/profile-management/profile-form\");\n  };\n\n  const handleEdit = useCallback((id: string) => {\n    navigate(\"/profile-management/profile-form\", {\n      state: { updatedValues: id },\n    });\n  }, [navigate]);\n\n  const profileRows = useMemo(() => {\n    return profiles.length === 0 ? (\n      <TableRow>\n        <TableCell colSpan={6} align=\"center\">\n          <NoDataFound />\n        </TableCell>\n      </TableRow>\n    ) : (\n      profiles.map((profile, index) => (\n        <TableRow key={profile.id}>\n          <TableCell>\n            <Typography variant=\"subtitle1\">{index + 1}</Typography>\n          </TableCell>\n          <TableCell>\n            <Typography variant=\"subtitle1\">\n              {profile.firstName} {profile.lastName}\n            </Typography>\n          </TableCell>\n          <TableCell>{profile.age || \"--\"}</TableCell>\n          <TableCell>{profile.email}</TableCell>\n          <TableCell>{profile.dob || \"--\"}</TableCell>\n          <TableCell>\n            <Tooltip title=\"Edit\">\n              <IconButton\n                sx={{ color: \"blue\" }}\n                onClick={() => handleEdit(profile.id)}\n              >\n                <Edit />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Delete\">\n              <IconButton\n                sx={{ color: \"red\" }}\n                onClick={() => handleDeleteClick(profile.id)}\n              >\n                <Delete />\n              </IconButton>\n            </Tooltip>\n          </TableCell>\n        </TableRow>\n      ))\n    );\n  }, [profiles,handleEdit]);\n\n  return (\n    <>\n      <Box display=\"flex\" justifyContent=\"flex-end\" width=\"100%\">\n        <ButtonComponent\n          label=\"ADD\"\n          id=\"add_Profile_btn\"\n          color=\"primary\"\n          endIcon={<AddIcon />}\n          onClick={handleClick}\n          sx={{ m: 2 }}\n        />\n      </Box>\n      <Grid container justifyContent=\"center\">\n        <Grid item xs={12} sm={12} md={12} p={1}>\n          <Card>\n            <CardHeader\n              title={<Typography variant=\"h6\">Profile List</Typography>}\n            />\n            <CardContent>\n              <TableContainer sx={{ maxHeight: 400 }}>\n                <Table stickyHeader>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>\n                        <b>#</b>\n                      </TableCell>\n                      <TableCell>\n                        <b>Name</b>\n                      </TableCell>\n                      <TableCell>\n                        <b>Age</b>\n                      </TableCell>\n                      <TableCell>\n                        <b>Email</b>\n                      </TableCell>\n                      <TableCell>\n                        <b>DOB</b>\n                      </TableCell>\n                      <TableCell>\n                        <b>Action</b>\n                      </TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>{profileRows}</TableBody>\n                </Table>\n              </TableContainer>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n      <DialogComponent\n        open={openDialog}\n        modalTitle=\"Confirm Deletion\"\n        handleClose={handleCancelDelete}\n        id={\"\"}\n        sx={{\n          \"& .MuiDialog-paper\": { width: \"35%\", maxWidth: \"none\" },\n          \"& .MuiDialogTitle-root\": {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            backgroundColor: \"#1976d2\",\n            padding: \"4px 16px\",\n            height: \"40px\",\n            fontSize: 16,\n          },\n          \"& .MuiDialogTitle-root .MuiTypography-root\": {\n            flexGrow: 1,\n            textAlign: \"center\",\n          },\n          \"& .MuiSvgIcon-root\": {\n            userSelect: \"none\",\n            display: \"inline-block\",\n            fill: \"currentColor\",\n            flexShrink: 0,\n            transition: \"fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n            fontSize: \"1.5rem\",\n            position: \"relative\",\n            top: \"-0.28em\",\n            left: \"0.1em\",\n            color: \"black\",\n          },\n        }}\n        hideBackdrop={false}\n        onClose={(event, reason) => {\n          if (reason !== \"backdropClick\" && reason !== \"escapeKeyDown\") {\n            setOpenDialog(false);\n          }\n        }}\n      >\n        <Typography variant=\"body1\" p={1} m={1}>\n          Are you sure you want to delete this profile?\n        </Typography>\n        <Grid container justifyContent=\"flex-end\" spacing={2} p={2}>\n          <Grid item>\n            <ButtonComponent\n              type=\"button\"\n              variant=\"contained\"\n              onClick={handleConfirmDelete}\n              color=\"primary\"\n              size=\"small\"\n              id=\"btn_Yes_submit\"\n              label=\"Yes\"\n            />\n          </Grid>\n          <Grid item>\n            <ButtonComponent\n              type=\"button\"\n              variant=\"contained\"\n              onClick={handleCancelDelete}\n              color=\"inherit\"\n              form=\"AddEditForm\"\n              size=\"small\"\n              id=\"btn_No_submit\"\n              label=\"No\"\n            />\n          </Grid>\n        </Grid>\n      </DialogComponent>\n    </>\n  );\n};\n\nexport default ProfileList;\n"],"names":["props","color","variant","label","size","id","children","rest","_jsxs","Button","_jsx","NoDataFound","_Fragment","src","NoDataFoundIcon","alt","width","open","scroll","modalTitle","handleClose","Dialog","onClose","DialogTitle","sx","m","p","IconButton","onClick","position","right","top","theme","palette","grey","CloseIcon","ProfileList","navigate","useNavigate","profiles","deleteProfileById","useProfiles","openDialog","setOpenDialog","useState","selectedProfileId","setSelectedProfileId","handleCancelDelete","handleEdit","useCallback","state","updatedValues","profileRows","useMemo","length","TableRow","TableCell","colSpan","align","map","profile","index","Typography","firstName","lastName","age","email","dob","Tooltip","title","Edit","handleDeleteClick","Delete","Box","display","justifyContent","ButtonComponent","endIcon","AddIcon","handleClick","Grid","container","item","xs","sm","md","Card","CardHeader","CardContent","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableBody","DialogComponent","maxWidth","alignItems","backgroundColor","padding","height","fontSize","flexGrow","textAlign","userSelect","fill","flexShrink","transition","left","hideBackdrop","event","reason","spacing","type","handleConfirmDelete","form"],"sourceRoot":""}