{"version":3,"file":"static/js/592.fa219090.chunk.js","mappings":"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","sources":["components/Button/ButtonComponent.tsx","components/FormikFormHandlers/FormikFormErrorHandler.tsx","components/FormikFormHandlers/FormikFormDatePicker.tsx","components/FormikFormHandlers/FormikFormInput.tsx","components/FormikFormHandlers/FormikFormNumberInput.tsx","constants/DatePicker.constant.ts","core/initialState/AddEditProfileForm.ts","views/AddProfile/AddEditProfileForm.tsx"],"sourcesContent":["import { Button } from \"@mui/material\";\nimport { ICustomButtonProps } from \"../../core/interface/ICustomButtonProps\";\n\nconst ButtonComponent = (props: ICustomButtonProps) => {\n  const {\n    color,\n    variant = \"contained\",\n    label,\n    size = \"small\",\n    id,\n    children,\n    ...rest\n  } = props;\n\n  return (\n    <Button\n      variant={variant}\n      size={size}\n      color={color || \"inherit\"}\n      id={id + `_button`}\n      {...rest}\n    >\n      <span id={id + `_button_label`}>{label}</span>\n      {children}\n    </Button>\n  );\n};\n\nexport default ButtonComponent;\n","import { Typography } from \"@mui/material\";\nimport { IFormikErrorProps } from \"../../core/interface/IFormikErrorProps\";\n\nconst FormikFormErrorHandler = (props: IFormikErrorProps) => {\n  const id = props.id;\n  const _error = props.meta.error;\n  return (\n    <>\n      {props.meta.touched &&\n        ((props.meta.error && (\n          <Typography id={id + `_text`} variant=\"body1\" color=\"error\">\n            {_error}\n          </Typography>\n        )) ||\n          (props.meta.warning && (\n            <Typography\n              id={id + `_text`}\n              className=\"text-danger\"\n              variant=\"body1\"\n              color=\"error\"\n            >\n              {\" \"}\n              {props.meta.warning}{\" \"}\n            </Typography>\n          )))}\n    </>\n  );\n};\n\nexport default FormikFormErrorHandler;\n","import { DatePicker } from \"@mui/x-date-pickers\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport dayjs from \"dayjs\";\nimport { useField } from \"formik\";\nimport { IFormikDateProps } from \"../../core/interface/IFormikDateProps\";\nimport FormikFormErrorHandler from \"./FormikFormErrorHandler\";\nconst FormikFormDatePicker = (props: IFormikDateProps) => {\n  const { id, label, format = \"DD/MM/YYYY\" } = props;\n  const [field, meta, helpers] = useField(props);\n  const value = field.value ? dayjs(field.value) : null;\n  return (\n    <>\n      <LocalizationProvider dateAdapter={AdapterDayjs}>\n        <DatePicker\n          {...field}\n          {...props}\n          label={label}\n          format={format}\n          value={value}\n          onChange={(date) => helpers.setValue(date)}\n        />\n      </LocalizationProvider>\n      <FormikFormErrorHandler meta={meta} id={`${id}_form_error`} />\n    </>\n  );\n};\n\nexport default FormikFormDatePicker;\n","import { TextField } from \"@mui/material\";\nimport { useField } from \"formik\";\nimport { IFormikInputProps } from \"../../core/interface/IFormikInputProps\";\nimport FormikFormErrorHandler from \"./FormikFormErrorHandler\";\n\nconst FormikFormInput = (props: IFormikInputProps) => {\n  const [field, meta, helpers] = useField(props);\n  const { id, validcharacter, invalidcharacter, onChange } = props;\n  const _placeholder = props.placeholder;\n  let subStrArr = [\n    \"?\",\n    \">\",\n    \"<\",\n    \"'\",\n    '\"',\n    \":\",\n    \";\",\n    \",\",\n    \"+\",\n    \"-\",\n    \"(\",\n    \")\",\n    \"*\",\n    \"&\",\n    \"^\",\n    \"%\",\n    \"$\",\n    \"#\",\n    \"{\",\n    \"[\",\n    \"]\",\n    \"}\",\n    \"|\",\n    \"/\",\n    \"=\",\n    \"_\",\n    \"~\",\n    \"\\\\\",\n    \"`\",\n  ];\n  if (validcharacter)\n    subStrArr = subStrArr.filter((el) => !validcharacter.includes(el));\n  if (invalidcharacter) invalidcharacter.forEach((el) => subStrArr.push(el));\n\n  const handleChange = (event: any) => {\n    if (props.type === \"tel\") {\n      !/[a-z]/i.exec(event.target.value) &&\n        helpers.setValue(event.target.value);\n      if (onChange) {\n        onChange(event);\n      }\n      return;\n    }\n    if (\n      !props.spaceallowed &&\n      (event.target.value === \"\" ||\n        !subStrArr.some((subStr: any) => event.target.value.includes(subStr)))\n    ) {\n      event.target.value = event.target.value.replace(/ +(?= )/g, \"\");\n      helpers.setValue(event.target.value);\n    } else if (\n      (props.spaceallowed === undefined || props.spaceallowed) &&\n      (event.target.value === \"\" ||\n        !subStrArr.some((subStr: any) => event.target.value.includes(subStr)))\n    ) {\n      helpers.setValue(event.target.value);\n    }\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n  return (\n    <>\n      <TextField\n        {...field}\n        {...props}\n        placeholder={_placeholder}\n        className={props.className}\n        disabled={props.disabled}\n        type={props.type ? props.type : \"text\"}\n        onChange={handleChange}\n      />\n      <FormikFormErrorHandler meta={meta} id={id + `_form_error`} />\n    </>\n  );\n};\n\nexport default FormikFormInput;\n","import { TextField } from \"@mui/material\";\nimport { useField } from \"formik\";\nimport { IFormikNumberProps } from \"../../core/interface/IFormikNumberProps\";\nimport FormikFormErrorHandler from \"./FormikFormErrorHandler\";\n\nconst FormikFormNumberInput = (props: IFormikNumberProps) => {\n  const id = props.id;\n  const [field, meta, helpers] = useField(props);\n  const _placeholder = props.placeholder;\n  return (\n    <>\n      <TextField\n        {...field}\n        {...props}\n        placeholder={_placeholder}\n        className={props.className}\n        disabled={props.disabled}\n        type=\"number\"\n        value={field.value === -999 ? \"\" : field.value}\n        onKeyDown={(e) => {\n          if (props.isnegativeallowed) {\n            (e.key === \"E\" ||\n              e.key === \"+\" ||\n              e.key === \"e\" ||\n              e.key === \".\") &&\n              e.preventDefault();\n          } else if (props.isnegativeanddotallowed) {\n            (e.key === \"E\" || e.key === \"+\" || e.key === \"e\") &&\n              e.preventDefault();\n          } else\n            (e.key === \"E\" ||\n              e.key === \"+\" ||\n              e.key === \"e\" ||\n              e.key === \".\" ||\n              e.key === \"-\") &&\n              e.preventDefault();\n        }}\n        onChange={(event) => {\n          if (event.target.value.length > props.maxLength)\n            event.target.value = event.target.value.slice(0, props.maxLength);\n          helpers.setValue(\n            isNaN(parseFloat(event.target.value))\n              ? -999\n              : parseFloat(event.target.value)\n          );\n        }}\n      />\n      <FormikFormErrorHandler meta={meta} id={id + `_form_error`} />\n    </>\n  );\n};\n\nexport default FormikFormNumberInput;\n","export const DateFormatForDatePicker = \"MM/DD/YYYY\";\n","export const initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    contactNumber: \"\",\n    dob: \"\",\n    age: \"\",\n  };","import ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport { Card, CardContent, Grid, Typography } from \"@mui/material\";\nimport { Field, Form, Formik } from \"formik\";\nimport moment from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport ButtonComponent from \"../../components/Button/ButtonComponent\";\nimport FormikFormDatePicker from \"../../components/FormikFormHandlers/FormikFormDatePicker\";\nimport FormikFormInput from \"../../components/FormikFormHandlers/FormikFormInput\";\nimport FormikFormNumberInput from \"../../components/FormikFormHandlers/FormikFormNumberInput\";\nimport { DateFormatForDatePicker } from \"../../constants/DatePicker.constant\";\nimport { useProfiles } from \"../../context/ProfileContext\";\nimport { initialValues } from \"../../core/initialState/AddEditProfileForm\";\n\nconst validationSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .matches(\n      /^[A-Za-z]{3,}$/,\n      \"First name must be at least 3 characters long, with no spaces or special characters\"\n    )\n    .required(\"First name is required\"),\n  lastName: Yup.string()\n    .matches(\n      /^[A-Za-z]{3,}$/,\n      \"Last name must be at least 3 characters long, with no spaces or special characters\"\n    )\n    .required(\"Last name is required\"),\n  email: Yup.string()\n    .email(\"Email must be a valid format\")\n    .required(\"Email is required\"),\n  contactNumber: Yup.string().matches(\n    /^\\d{10}$/,\n    \"Contact number must be exactly 10 digits\"\n  ),\n  age: Yup.number()\n    .positive(\"Age must be a positive number\")\n    .integer(\"Age must be an integer\"),\n});\n\nconst AddEditProfileForm = () => {\n  const { profiles, updateProfileById, createNewProfile } = useProfiles();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const updatedValues = location.state?.updatedValues || null;\n  const [initialValuesSetting, setInitialValues] = useState<any>(null);\n\n  useEffect(() => {\n    if (updatedValues) {\n      const profile = profiles.find((profile) => profile.id === updatedValues);\n      if (profile) {\n        setInitialValues({\n          firstName: profile.firstName,\n          lastName: profile.lastName,\n          email: profile.email,\n          contactNumber: profile.contactNumber,\n          dob: profile.dob,\n          age: profile.age,\n        });\n      }\n    } else {\n      setInitialValues(initialValues);\n    }\n  }, [updatedValues, profiles]);\n\n  const handleNavigateBack = () => {\n    navigate(\"/profile-management/profile\");\n  };\n\n  const handleClose = () => {\n    navigate(\"/profile-management/profile\");\n  };\n\n  const handleSubmit = async (values: any) => {\n    if (updatedValues) {\n      if (values.dob) {\n        let dob = moment(values.dob.$d).format(DateFormatForDatePicker);\n        values.dob = dob;\n      }\n      values.id = updatedValues;\n      await updateProfileById(updatedValues, values);\n    } else {\n      if (values.dob) {\n        let dob = moment(values.dob.$d).format(DateFormatForDatePicker);\n        values.dob = dob;\n      }\n      await createNewProfile(values);\n    }\n    navigate(\"/profile-management/profile\");\n  };\n\n  return (\n    <>\n      <Grid container alignItems=\"center\">\n        <Grid item sx={{ m: 4 }}>\n          <ButtonComponent\n            startIcon={<ArrowBackIcon />}\n            onClick={handleNavigateBack}\n            label={\"\"}\n            color=\"info\"\n            id={\"navigate_back\"}\n          />\n        </Grid>\n      </Grid>\n      <Formik\n        initialValues={initialValuesSetting}\n        enableReinitialize={true}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ values, setFieldValue }) => {\n          return (\n            <Form id=\"AddEditForm\">\n              <Grid container spacing={3}>\n                <Grid item xs={12}>\n                  <Card>\n                    <CardContent>\n                      <Grid container spacing={3}>\n                        <Grid item xs={12}>\n                          <Typography\n                            variant=\"h6\"\n                            color=\"primary\"\n                            display=\"flex\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                          >\n                            {updatedValues\n                              ? \"Update Personal Details \"\n                              : \"Add Personal Details\"}\n                          </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                          <Field\n                            name=\"firstName\"\n                            type=\"text\"\n                            id=\"firstName_Field\"\n                            placeholder=\"Enter First Name\"\n                            as={FormikFormInput}\n                            InputLabelProps={{ shrink: true }}\n                            label=\"First Name\"\n                            size=\"small\"\n                            sx={{ width: \"100%\" }}\n                          />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                          <Field\n                            name=\"lastName\"\n                            type=\"text\"\n                            id=\"lastName_Field\"\n                            placeholder=\"Enter Last Name\"\n                            as={FormikFormInput}\n                            InputLabelProps={{ shrink: true }}\n                            label=\"Last Name\"\n                            size=\"small\"\n                            sx={{ width: \"100%\" }}\n                          />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                          <Field\n                            name=\"email\"\n                            type=\"text\"\n                            id=\"email_Field\"\n                            placeholder=\"Enter Email\"\n                            as={FormikFormInput}\n                            InputLabelProps={{ shrink: true }}\n                            label=\"Email\"\n                            size=\"small\"\n                            sx={{ width: \"100%\" }}\n                          />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                          <Field\n                            name=\"contactNumber\"\n                            type=\"text\"\n                            id=\"contactNumber_Field\"\n                            placeholder=\"Enter Contact Number\"\n                            as={FormikFormNumberInput}\n                            InputLabelProps={{ shrink: true }}\n                            label=\"Contact Number\"\n                            size=\"small\"\n                            sx={{ width: \"100%\" }}\n                          />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                          <Field\n                            name=\"age\"\n                            type=\"text\"\n                            id=\"age_Field\"\n                            placeholder=\"Enter Age\"\n                            InputLabelProps={{ shrink: true }}\n                            as={FormikFormNumberInput}\n                            label=\"Age\"\n                            sx={{ width: \"100%\" }}\n                            size=\"small\"\n                          />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                          <Field\n                            name=\"dob\"\n                            type=\"text\"\n                            id=\"dob_Field\"\n                            placeholder=\"Enter DOB\"\n                            as={FormikFormDatePicker}\n                            disableFuture\n                            sx={{ width: \"100%\" }}\n                            label=\"DOB\"\n                            // size=\"small\"\n                          />\n                        </Grid>\n                        <Grid\n                          container\n                          justifyContent=\"flex-end\"\n                          spacing={2}\n                          mt={2}\n                        >\n                          <Grid item>\n                            <ButtonComponent\n                              type=\"button\"\n                              variant=\"contained\"\n                              onClick={handleClose}\n                              color=\"inherit\"\n                              size=\"small\"\n                              id=\"btn_cancel_submit\"\n                              label=\"Cancel\"\n                            />\n                          </Grid>\n                          <Grid item>\n                            <ButtonComponent\n                              type=\"submit\"\n                              variant=\"contained\"\n                              color=\"primary\"\n                              form=\"AddEditForm\"\n                              size=\"small\"\n                              id=\"btn_Filter_submit\"\n                              label=\"Submit\"\n                            />\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              </Grid>\n            </Form>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nexport default AddEditProfileForm;\n"],"names":["props","color","variant","label","size","id","children","rest","_jsxs","Button","_jsx","_error","meta","error","_Fragment","touched","Typography","warning","className","format","field","helpers","useField","value","dayjs","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","onChange","date","setValue","FormikFormErrorHandler","validcharacter","invalidcharacter","_placeholder","placeholder","subStrArr","filter","el","includes","forEach","push","TextField","disabled","type","event","exec","target","spaceallowed","some","subStr","undefined","replace","onKeyDown","e","isnegativeallowed","key","preventDefault","isnegativeanddotallowed","length","maxLength","slice","isNaN","parseFloat","DateFormatForDatePicker","initialValues","firstName","lastName","email","contactNumber","dob","age","validationSchema","Yup","shape","matches","required","positive","integer","AddEditProfileForm","_location$state","profiles","updateProfileById","createNewProfile","useProfiles","navigate","useNavigate","updatedValues","useLocation","state","initialValuesSetting","setInitialValues","useState","useEffect","profile","find","handleClose","Grid","container","alignItems","item","sx","m","ButtonComponent","startIcon","ArrowBackIcon","onClick","handleNavigateBack","Formik","enableReinitialize","onSubmit","async","values","moment","$d","_ref","setFieldValue","Form","spacing","xs","Card","CardContent","display","justifyContent","md","Field","name","as","FormikFormInput","InputLabelProps","shrink","width","FormikFormNumberInput","FormikFormDatePicker","disableFuture","mt","form"],"sourceRoot":""}